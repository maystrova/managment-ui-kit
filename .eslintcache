[{"/Users/kate_maystrova/dev/managment-ui-kit/src/Components/Layout/index.tsx":"1","/Users/kate_maystrova/dev/managment-ui-kit/src/Components/Sidebar/index.tsx":"2","/Users/kate_maystrova/dev/managment-ui-kit/src/Components/List/index.tsx":"3","/Users/kate_maystrova/dev/managment-ui-kit/src/Components/Statistics/index.tsx":"4","/Users/kate_maystrova/dev/managment-ui-kit/src/index.tsx":"5","/Users/kate_maystrova/dev/managment-ui-kit/src/Components/Header/index.tsx":"6","/Users/kate_maystrova/dev/managment-ui-kit/src/Components/Checkbox/index.tsx":"7","/Users/kate_maystrova/dev/managment-ui-kit/src/Components/Tag/index.tsx":"8","/Users/kate_maystrova/dev/managment-ui-kit/src/Components/Icon/index.tsx":"9","/Users/kate_maystrova/dev/managment-ui-kit/src/Components/File/index.tsx":"10","/Users/kate_maystrova/dev/managment-ui-kit/src/Components/TaskCard/index.tsx":"11","/Users/kate_maystrova/dev/managment-ui-kit/src/Components/Task/index.tsx":"12","/Users/kate_maystrova/dev/managment-ui-kit/src/Components/Avatar/index.tsx":"13","/Users/kate_maystrova/dev/managment-ui-kit/src/Components/TasksList/index.tsx":"14","/Users/kate_maystrova/dev/managment-ui-kit/src/Components/Layout/tasks.ts":"15","/Users/kate_maystrova/dev/managment-ui-kit/src/Components/AddComment/index.tsx":"16","/Users/kate_maystrova/dev/managment-ui-kit/src/reportWebVitals.ts":"17","/Users/kate_maystrova/dev/managment-ui-kit/src/Components/UserInfo/index.tsx":"18","/Users/kate_maystrova/dev/managment-ui-kit/src/Components/Comment/index.tsx":"19","/Users/kate_maystrova/dev/managment-ui-kit/src/Components/Button/index.tsx":"20","/Users/kate_maystrova/dev/managment-ui-kit/src/Components/AddTask/index.tsx":"21"},{"size":6017,"mtime":1612112967262,"results":"22","hashOfConfig":"23"},{"size":1420,"mtime":1610997691981,"results":"24","hashOfConfig":"23"},{"size":1170,"mtime":1610997691980,"results":"25","hashOfConfig":"23"},{"size":702,"mtime":1610997691982,"results":"26","hashOfConfig":"23"},{"size":500,"mtime":1609512798861,"results":"27","hashOfConfig":"23"},{"size":1608,"mtime":1611489625275,"results":"28","hashOfConfig":"23"},{"size":170,"mtime":1609604413191,"results":"29","hashOfConfig":"23"},{"size":342,"mtime":1610141225750,"results":"30","hashOfConfig":"23"},{"size":341,"mtime":1610907864397,"results":"31","hashOfConfig":"23"},{"size":853,"mtime":1612011385631,"results":"32","hashOfConfig":"23"},{"size":990,"mtime":1611000276182,"results":"33","hashOfConfig":"23"},{"size":4420,"mtime":1612111175963,"results":"34","hashOfConfig":"23"},{"size":381,"mtime":1610652065742,"results":"35","hashOfConfig":"23"},{"size":1612,"mtime":1612112913343,"results":"36","hashOfConfig":"23"},{"size":10269,"mtime":1612012309157,"results":"37","hashOfConfig":"23"},{"size":1316,"mtime":1611399235109,"results":"38","hashOfConfig":"23"},{"size":425,"mtime":1609512798862,"results":"39","hashOfConfig":"23"},{"size":1029,"mtime":1610907864407,"results":"40","hashOfConfig":"23"},{"size":687,"mtime":1610370904514,"results":"41","hashOfConfig":"23"},{"size":469,"mtime":1611485576656,"results":"42","hashOfConfig":"23"},{"size":2454,"mtime":1612113500139,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1y5cfo",{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kate_maystrova/dev/managment-ui-kit/src/Components/Layout/index.tsx",[],"/Users/kate_maystrova/dev/managment-ui-kit/src/Components/Sidebar/index.tsx",["97"],"import React from \"react\";\nimport './style.css'\nimport {List} from \"../List\";\nimport {UserInfo} from \"../UserInfo\";\nimport {Icon} from \"../Icon\";\nimport ownerAvatar from \"../Layout/pics/userpic.svg\";\nimport {ListType} from \"../List/types\";\nimport {Statistics} from \"../Statistics\";\nimport {StatisticsProps} from \"../Statistics\";\n\n\ninterface SidebarProps {\n    icon: string\n    title: string\n    search: string\n    lists: ListType[]\n    statistics: StatisticsProps\n}\n\nconst Sidebar = ({icon, title, search, lists, statistics}: SidebarProps) => {\n    return <aside className=\"Sidebar\">\n        <header className='Sidebar__header'>\n            <div className='Sidebar__header-title'>\n                <div className='Sidebar__header-icon'>\n                    <Icon size={\"small\"} src={icon}/>\n                </div>\n                <h3>{title}</h3>\n            </div>\n        <Icon size={\"x-small\"} src={search}/>\n        </header>\n        <UserInfo avatar={ownerAvatar} name={'Emilee Simchenko'} profession={'Product Owner'}/>\n        <Statistics completed={statistics.completed} opened={statistics.opened}/>\n        {lists.map( (list) => ( <List title={list.title} items={list.items} addition={list.addition} />))}\n\n        <div className=\"Sidebar__footer\">\n            <span><a className='Sidebar__footer-link' href=\"#\">Invite your team</a> and start collaborating!</span>\n        </div>\n    </aside>\n}\n\nexport {Sidebar}","/Users/kate_maystrova/dev/managment-ui-kit/src/Components/List/index.tsx",["98","99"],"import React from 'react'\nimport './style.css'\n\nimport {ListType} from './types'\n\nconst List = ({items, addition, title}: ListType) => {\n    return (\n        <div className='List'>\n            <span className=\"List__title\">{title}</span>\n            <div className='List__items'>\n                <ul className='List__items-block'>\n                    {items.map((item) => (\n                        <li className='List__items-string'>\n                            <a className='List__items-link' href=\"#\">\n                                {item.icon && <img className='List__items-link-icon' src={item.icon} alt=\"icon\"/>}\n                                {item.title}\n                                {item.avatars?.map((avatar) => <img className='List__items-link-avatar' src={avatar} alt=\"avatar\"/>)}\n                                {item.count && <span className='List__items-count'>3</span>}\n                            </a>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n            <div>\n                <a  className='List__items-addition' href=\"#\">{addition}</a>\n            </div>\n        </div>\n    )\n}\n\nexport {List}",["100","101"],"/Users/kate_maystrova/dev/managment-ui-kit/src/Components/Statistics/index.tsx",[],"/Users/kate_maystrova/dev/managment-ui-kit/src/index.tsx",[],"/Users/kate_maystrova/dev/managment-ui-kit/src/Components/Header/index.tsx",["102","103"],"import React from \"react\";\nimport './style.css'\nimport {Button} from \"../Button\";\nimport {Icon} from \"../Icon\";\nimport {Avatar} from \"../Avatar\";\nimport {HeaderType} from './types'\n\ninterface HeaderProps {\n    creators: string[]\n    icon: string\n    title: string\n    menu: string[]\n    onShare: () => void\n}\n\nconst Header = ({creators, icon, menu, title, onShare}: HeaderProps) => {\n    return (\n        <header className=\"Header\">\n            <div className='Header__titleRow'>\n                <div className=\"Header__titleRow-title\">\n                    <Icon size={\"large\"} src={icon}/>\n                    <h1>{title}</h1>\n                </div>\n                <div className=\"Header__titleRow-socialMedia\">\n                    {creators.map((creator) => <div className='Header__titleRow-socialMedia-avatar'><Avatar\n                        size={\"small\"} src={creator}/></div>)}\n                    <div className=\"Header__titleRow-socialMedia-buttons\">\n                        <div className='Header__titleRow-socialMedia-button'>\n                            <Button onClick={onShare} text=\"Share\"/>\n                        </div>\n                        <div className='Header__titleRow-socialMedia-button'>\n                            <Button backgroundColor=\"#FFF8DD\" color=\"#FFC200\" text=\"💬 Chat\"/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"Header__menu\">\n                {menu.map((item) => <a className='Header__menu-item' href=\"#\">{item}</a>)}\n            </div>\n        </header>\n    )\n}\n\nexport {Header}","/Users/kate_maystrova/dev/managment-ui-kit/src/Components/Checkbox/index.tsx",[],["104","105"],"/Users/kate_maystrova/dev/managment-ui-kit/src/Components/Tag/index.tsx",[],["106","107"],"/Users/kate_maystrova/dev/managment-ui-kit/src/Components/Icon/index.tsx",[],"/Users/kate_maystrova/dev/managment-ui-kit/src/Components/File/index.tsx",[],"/Users/kate_maystrova/dev/managment-ui-kit/src/Components/TaskCard/index.tsx",[],["108","109"],"/Users/kate_maystrova/dev/managment-ui-kit/src/Components/Task/index.tsx",["110","111"],"import React from \"react\";\nimport './style.css'\nimport {Checkbox} from \"../Checkbox\";\nimport {Avatar} from \"../Avatar\";\nimport userAvatar1 from \"../Layout/pics/userpic1.png\";\nimport {Tag} from \"../Tag\";\nimport {Comment} from \"../Comment\";\nimport {DiscussionType, TaskType} from \"./types\";\nimport {AddComment} from \"../AddComment\";\nimport {File} from \"../File\";\n\ninterface TaskProps {\n    task: TaskType,\n    onTaskUpdated: (task: TaskType) => void\n}\n\nconst Task = ({task, onTaskUpdated}: TaskProps) => {\n    const onCommentAdd = (comment: DiscussionType, task: TaskType): void => {\n        const newDiscussions = [comment, ...task.discussions]\n\n        const newTask: TaskType = {\n            ...task,\n            discussions: newDiscussions\n        }\n\n        onTaskUpdated(newTask)\n    }\n\n    const onTaskAdd = (task: TaskType, title: string, description: string): void => {\n\n        const newTask: TaskType = {\n            ...task,\n            title,\n            description,\n        }\n\n        console.log(newTask)\n    }\n\n    const onFileDelete = (task: TaskType, fileIdForDelete: number): void => {\n    const newTask: TaskType = {\n        ...task,\n        files: task.files.filter((file) => file.id !== fileIdForDelete)\n    }\n    onTaskUpdated(newTask)\n    }\n\n\n    return (\n        <div className='task'>\n            <header className='task__header'>\n                <div>\n                    <h2>{task.title}</h2>\n                    <span>Added by {task.addedBy} {task.createdAt}</span>\n                </div>\n                <div>\n                    <Checkbox/>\n                </div>\n            </header>\n            <div className='task__information'>\n                <div className='task__information-asignTo'>\n                    <h4 className='task__title'>Asign to</h4>\n                    <div className='task__information-asignTo-user'>\n                        <Avatar size={\"x-small\"} src={task.user.avatar}/>\n                        <span className='task__information-asignTo-name'>{task.assignTo}</span>\n                    </div>\n\n                </div>\n                <div className='task__information-date'>\n                    <h4 className='task__title'>Due on</h4>\n                    <div>{task.dueOn}</div>\n                </div>\n                <div className='task__information-tag'>\n                    <h4 className='task__title'>Tag</h4>\n                    <Tag text={task.tag} type={task.tag}/>\n                </div>\n                <div className=\"task__information-followers\">\n                    <h4 className='task__title'>Followers</h4>\n                    {task.followers.map((follower) => <Avatar size={\"x-small\"} src={follower}/>)}\n                </div>\n            </div>\n\n            <div className=\"task__description\">\n                <h4 className=\"task__description-title task__title\">Description</h4>\n                <p className='task__description-content'>{task.description}\n                </p>\n                <div className=\"task__description-files\">\n                    {task.files.map((file) => (\n                        <File\n                            key={file.title}\n                            title={file.title}\n                            preview={file.preview}\n                            format={file.format}\n                            size={file.size}\n                            onFileDelete={(fileId) => {onFileDelete(task, fileId)}}\n                            id={file.id}\n                        />\n                    ))}\n                </div>\n            </div>\n\n            <div className=\"task__discussion\">\n                <h4 className='task__title'>Discussion</h4>\n                <div className='task__discussion-addComment'>\n                    <AddComment onCommentAdded={(comment) => onCommentAdd(comment, task)} userpic={task.user.avatar}/>\n                </div>\n                <div className='task__discussion-comments'>\n                    {task.discussions.map(({name, profession, date, text, avatar}) => (\n                        <Comment\n                            key={name}\n                            name={name}\n                            profession={profession}\n                            date={date}\n                            text={text}\n                            avatar={avatar}\n                        />\n                    ))}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport {Task}","/Users/kate_maystrova/dev/managment-ui-kit/src/Components/Avatar/index.tsx",[],["112","113"],"/Users/kate_maystrova/dev/managment-ui-kit/src/Components/TasksList/index.tsx",[],"/Users/kate_maystrova/dev/managment-ui-kit/src/Components/Layout/tasks.ts",["114"],"import userAvatar1 from '../Layout/pics/userpic1.png'\nimport userAvatar7 from '../Layout/pics/userpic7.png'\nimport userAvatar8 from '../Layout/pics/userpic8.png'\nimport userAvatar9 from '../Layout/pics/userpic9.png'\nimport userAvatar5 from '../Layout/pics/userpic5.png'\nimport userAvatar6 from '../Layout/pics/userpic6.png'\nimport {TaskType} from \"../Task/types\";\nimport userAvatar2 from \"./pics/userpic2.png\";\nimport userAvatar3 from \"./pics/userpic3.png\";\nimport userAvatar4 from \"./pics/userpic4.png\";\nimport commentAvatar3 from \"./pics/commentpic2.png\";\nimport commentAvatar2 from \"./pics/commentpic3.png\";\nimport ownerAvatar from \"./pics/userpic.svg\";\nimport filePreview from \"./pics/file.png\";\n\nexport type Task = {\n    title: string,\n    user: string,\n    type: string\n}\n\nexport const backlogTasks: TaskType[] = [{\n    title: 'E-mail after registration so that I can confirm my address',\n    user: {avatar: userAvatar1},\n    tag: 'development',\n    addedBy: 'Kristin A',\n    createdAt: '07.01.2020',\n    isChecked: false,\n    assignTo: 'Linzell Bowman',\n    dueOn: 'Tue, Dec 25',\n    followers: [userAvatar2, userAvatar3, userAvatar4, userAvatar5],\n    description: 'Task Descriptions are used during project planning, project execution and project control. During project planning the task descriptions are used for scope planning and creating estimates. During project execution the task description is used by those doing the activities to ensure they are doing the work correctly.',\n    discussions: [\n        {\n            name: 'Helena Brauer',\n            profession: 'Designer',\n            date: 'Yesterday at 12:37pm',\n            text: 'During a project build, it is necessary to evaluate the product design and development against project requirements and outcomes',\n            avatar: commentAvatar3\n        },\n        {\n            name: 'Prescott MacCaffery,',\n            profession: 'Developer',\n            date: 'Yesterday at 12:37pm',\n            text: '@Helena Software quality assurance activity in which one or several humans check a program mainly',\n            avatar: commentAvatar2\n        }\n    ],\n    files: [{\n        title: 'Redesign Brief',\n        format: '.pdf',\n        preview: filePreview,\n        size: '159 kb',\n        id: 3,\n    },\n        {\n            title: 'Header',\n            format: '.png',\n            preview: filePreview,\n            size: '129 kb',\n            id: 4,\n        }]\n}, {\n    title: 'Find top 5 customers and get reviews from them',\n    user: {avatar: userAvatar7},\n    tag: 'marketing',\n    addedBy: 'Sophie J.',\n    createdAt: '05.04.2020',\n    isChecked: false,\n    assignTo: 'Kurz Russell',\n    dueOn: 'Wed, Dec 26',\n    followers: [userAvatar3, userAvatar5],\n    description: 'Task Descriptions are used during project planning, project execution and project control. During project planning the task descriptions are used for scope planning and creating estimates. During project execution the task description is used by those doing the activities to ensure they are doing the work correctly.',\n    discussions: [\n        {\n            name: 'Din Thomas',\n            profession: 'Wizard',\n            date: 'Yesterday at 12:40pm',\n            text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\n            avatar: userAvatar9\n        },\n        {\n            name: 'Emma Watson,',\n            profession: 'Developer',\n            date: 'Yesterday at 12:37pm',\n            text: 'Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n            avatar: userAvatar2\n        }\n    ],\n    files: [{\n        title: 'Redesign Brief',\n        format: '.pdf',\n        preview: filePreview,\n        size: '159 kb',\n        id: 1,\n    },\n        {\n            title: 'Header',\n            format: '.png',\n            preview: filePreview,\n            size: '129 kb',\n            id: 2,\n        }]\n}, {\n    title: 'Two-factor authentication to make my private data more secure',\n    user: {avatar: userAvatar8},\n    tag: 'design',\n    addedBy: 'Chris P.',\n    createdAt: '01.01.2020',\n    isChecked: false,\n    assignTo: 'Johny Bravo',\n    dueOn: 'Sun, Jan 10',\n    followers: [userAvatar6, userAvatar1, userAvatar2],\n    description: 'Task Descriptions are used during project planning, project execution and project control. During project planning the task descriptions are used for scope planning and creating estimates. During project execution the task description is used by those doing the activities to ensure they are doing the work correctly.',\n    discussions: [\n        {\n            name: 'Sophie Loren',\n            profession: 'Actress',\n            date: 'Yesterday at 13:15pm',\n            text: 'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n            avatar: userAvatar5\n        },\n        {\n            name: 'Harold Lowder',\n            profession: 'Teenager',\n            date: 'Yesterday at 12:45pm',\n            text: ' Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n            avatar: userAvatar8\n        }\n    ],\n    files: [{\n        title: 'Redesign Brief',\n        format: '.pdf',\n        preview: filePreview,\n        size: '159 kb',\n        id: 1,\n    },\n        {\n            title: 'Header',\n            format: '.png',\n            preview: filePreview,\n            size: '129 kb',\n            id: 1000,\n        }]\n}]\n\nexport const todoTasks: TaskType[] = [{\n    title: `An option to search in current projects or in all projects`,\n    user: {avatar: userAvatar9},\n    tag: 'design',\n    addedBy: 'John A.',\n    createdAt: '07.01.2020',\n    isChecked: false,\n    assignTo: 'Leo Still',\n    dueOn: 'Mon, Jun 25',\n    followers: [userAvatar5],\n    description: 'Task Descriptions are used during project planning, project execution and project control. During project planning the task descriptions are used for scope planning and creating estimates. During project execution the task description is used by those doing the activities to ensure they are doing the work correctly.',\n    discussions: [\n        {\n            name: 'Kelsy Bowman',\n            profession: 'Manager',\n            date: 'Yesterday at 14:03pm',\n            text: ' Cras semper auctor neque vitae tempus. Vitae suscipit tellus mauris a diam maecenas sed.',\n            avatar: userAvatar3\n        },\n        {\n            name: 'Ken Morby,',\n            profession: 'Designer',\n            date: 'Yesterday at 15:04pm',\n            text: 'Orci ac auctor augue mauris. Amet facilisis magna etiam tempor orci eu lobortis elementum.',\n            avatar: userAvatar6\n        }\n    ],\n    files: [{\n        title: 'Redesign Brief',\n        format: '.pdf',\n        preview: filePreview,\n        size: '159 kb',\n        id: 99999,\n    },\n        {\n            title: 'Header',\n            format: '.png',\n            preview: filePreview,\n            size: '129 kb',\n            id: 234234,\n        }]\n}, {\n    title: `Account for teams and personal in bottom style`,\n    user: {avatar: userAvatar5},\n    tag: 'marketing',\n    addedBy: 'Sally G',\n    createdAt: '15.03.2020',\n    isChecked: false,\n    assignTo: 'Kelsy Jenner',\n    dueOn: 'Tue, Dec 27',\n    followers: [userAvatar9, userAvatar4, userAvatar3, userAvatar5],\n    description: 'Task Descriptions are used during project planning, project execution and project control. During project planning the task descriptions are used for scope planning and creating estimates. During project execution the task description is used by those doing the activities to ensure they are doing the work correctly.',\n    discussions: [\n        {\n            name: 'Loren Koen',\n            profession: 'Developer',\n            date: 'Today at 17:00pm',\n            text: 'Ultricies integer quis auctor elit sed vulputate. Ipsum suspendisse ultrices gravida dictum fusce.',\n            avatar: userAvatar5\n        },\n        {\n            name: 'Alice Morgan,',\n            profession: 'Developer',\n            date: 'Today at 17.03pm',\n            text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\n            avatar: userAvatar5\n        }\n    ],\n    files: [{\n        title: 'Redesign Brief',\n        format: '.pdf',\n        preview: filePreview,\n        size: '159 kb',\n        id: 3245,\n    },\n        {\n            title: 'Header',\n            format: '.png',\n            preview: filePreview,\n            size: '129 kb',\n            id: 2345235465,\n        }]\n}, {\n    title: `Listing on Product Hunt so that we can reach as many potential users`,\n    user: {avatar: userAvatar6},\n    tag: 'design',\n    addedBy: 'Holly Page',\n    createdAt: '08.06.2020',\n    isChecked: false,\n    assignTo: 'Dadly Hooper',\n    dueOn: 'Tue, Jul 25',\n    followers: [userAvatar3, userAvatar4,],\n    description: 'Task Descriptions are used during project planning, project execution and project control. During project planning the task descriptions are used for scope planning and creating estimates. During project execution the task description is used by those doing the activities to ensure they are doing the work correctly.',\n    discussions: [\n        {\n            name: 'Holly Molly',\n            profession: 'Designer',\n            date: 'Yesterday at 19:04pm',\n            text: 'Tortor dignissim convallis aenean et tortor. Nunc aliquet bibendum enim facilisis.',\n            avatar: userAvatar3\n        },\n        {\n            name: 'Dan Hole,',\n            profession: 'Manager',\n            date: 'Yesterday at 19:20pm',\n            text: 'Sapien eget mi proin sed libero. Porta nibh venenatis cras sed felis eget.',\n            avatar: commentAvatar2\n        }\n    ],\n    files: [{\n        title: 'Redesign Brief',\n        format: '.pdf',\n        preview: filePreview,\n        size: '159 kb',\n        id: 345\n    },\n        {\n            title: 'Header',\n            format: '.png',\n            preview: filePreview,\n            size: '129 kb',\n            id: 2345742345,\n        }]\n},\n]\n","/Users/kate_maystrova/dev/managment-ui-kit/src/Components/AddComment/index.tsx",[],"/Users/kate_maystrova/dev/managment-ui-kit/src/reportWebVitals.ts",[],"/Users/kate_maystrova/dev/managment-ui-kit/src/Components/UserInfo/index.tsx",["115"],"import React from 'react'\nimport './style.css'\nimport {Avatar} from \"../Avatar\";\nimport {Icon} from \"../Icon\";\nimport dotsIcon from '../Layout/pics/dots.svg'\n\ninterface UserInfoProps {\n    avatar: string\n    name: string\n    profession: string\n}\n\nconst UserInfo = ({avatar, name, profession}: UserInfoProps) => {\n    return (\n        <div className='UserInfo'>\n            <div className='UserInfo__information'>\n                <div className='UserInfo__avatar'>\n                    <Avatar size={\"large\"} src={avatar}/>\n                </div>\n                <div className='UserInfo__information-person'>\n                    <div className='UserInfo__information-name'>{name}</div>\n                    <div className='UserInfo__information-profession'>{profession}</div>\n                </div>\n            </div>\n            <div className='UserInfo__more'>\n                <a href=\"#\">\n                    <Icon size={\"small\"} src={dotsIcon}/>\n                </a>\n            </div>\n        </div>\n    )\n}\n\nexport {UserInfo}","/Users/kate_maystrova/dev/managment-ui-kit/src/Components/Comment/index.tsx",[],"/Users/kate_maystrova/dev/managment-ui-kit/src/Components/Button/index.tsx",[],"/Users/kate_maystrova/dev/managment-ui-kit/src/Components/AddTask/index.tsx",[],{"ruleId":"116","severity":1,"message":"117","line":36,"column":19,"nodeType":"118","endLine":36,"endColumn":64},{"ruleId":"116","severity":1,"message":"117","line":14,"column":29,"nodeType":"118","endLine":14,"endColumn":70},{"ruleId":"116","severity":1,"message":"117","line":25,"column":17,"nodeType":"118","endLine":25,"endColumn":63},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":6,"column":9,"nodeType":"125","messageId":"126","endLine":6,"endColumn":19},{"ruleId":"116","severity":1,"message":"117","line":38,"column":37,"nodeType":"118","endLine":38,"endColumn":79},{"ruleId":"119","replacedBy":"127"},{"ruleId":"121","replacedBy":"128"},{"ruleId":"119","replacedBy":"129"},{"ruleId":"121","replacedBy":"130"},{"ruleId":"119","replacedBy":"131"},{"ruleId":"121","replacedBy":"132"},{"ruleId":"123","severity":1,"message":"133","line":5,"column":8,"nodeType":"125","messageId":"126","endLine":5,"endColumn":19},{"ruleId":"123","severity":1,"message":"134","line":29,"column":11,"nodeType":"125","messageId":"126","endLine":29,"endColumn":20},{"ruleId":"119","replacedBy":"135"},{"ruleId":"121","replacedBy":"136"},{"ruleId":"123","severity":1,"message":"137","line":13,"column":8,"nodeType":"125","messageId":"126","endLine":13,"endColumn":19},{"ruleId":"116","severity":1,"message":"117","line":26,"column":17,"nodeType":"118","endLine":26,"endColumn":29},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["138"],"no-negated-in-lhs",["139"],"@typescript-eslint/no-unused-vars","'HeaderType' is defined but never used.","Identifier","unusedVar",["138"],["139"],["138"],["139"],["138"],["139"],"'userAvatar1' is defined but never used.","'onTaskAdd' is assigned a value but never used.",["138"],["139"],"'ownerAvatar' is defined but never used.","no-global-assign","no-unsafe-negation"]